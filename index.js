const express = require("express");
const cors = require("cors");
const { Client, GatewayIntentBits } = require("discord.js");

const app = express();
const allowedUsers = new Set();

// üîë –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –∏ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
const BOT_TOKEN =
    "MTQwMDI5ODcwNzgxOTMwMjkzMw.G0Mwr2.w38DHfJnxHk1ztH_f-9--2HqtKFtIQNeo4KnPM";
const OWNER_ID = "832278157066240040"; // ‚Üê —Ç–≤–æ–π Discord ID

// üåê Middleware
app.use(cors());
app.use(express.json());

// üì° API –¥–ª—è userscript
app.post("/verify", (req, res) => {
    const { id } = req.body;
    if (!id)
        return res.status(400).json({ status: "error", message: "Missing ID" });

    const approved = allowedUsers.has(id);
    res.json({ status: approved ? "approved" : "denied" });
});

// ü§ñ Discord –±–æ—Ç
const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent,
    ],
});

client.on("ready", () => {
    console.log(`ü§ñ –ë–æ—Ç –≤–æ—à—ë–ª –∫–∞–∫ ${client.user.tag}`);
});

// üì© –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
client.on("messageCreate", (message) => {
    if (message.author.bot) return;

    const isAdmin = message.author.id === OWNER_ID;
    const isAllowCmd = message.content.startsWith("!—Ä–∞–∑—Ä–µ—à–∏—Ç—å");
    const isRevokeCmd = message.content.startsWith("!–∑–∞–±—Ä–∞—Ç—å");

    if ((isAllowCmd || isRevokeCmd) && !isAdmin) {
        return message.reply(
            "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.(–º–æ–∂–Ω–æ –ø–æ –∂–µ–ª–∞–Ω–∏—é –Ω–∞xy–π)",
        );
    }

    if (!isAdmin) return;

    const mention = message.mentions.users.first();
    if (!mention) {
        return message.reply(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: `!—Ä–∞–∑—Ä–µ—à–∏—Ç—å @user` –∏–ª–∏ `!–∑–∞–±—Ä–∞—Ç—å @user`",
        );
    }

    if (isAllowCmd) {
        allowedUsers.add(mention.id);
        message.reply(`‚úÖ –î–æ—Å—Ç—É–ø –≤—ã–¥–∞–Ω –¥–ª—è <@${mention.id}>`);
        console.log(`‚úÖ ID ${mention.id} –¥–æ–±–∞–≤–ª–µ–Ω`);
    }

    if (isRevokeCmd) {
        if (allowedUsers.delete(mention.id)) {
            message.reply(`‚ùå –î–æ—Å—Ç—É–ø –æ—Ç–æ–∑–≤–∞–Ω —É <@${mention.id}>`);
            console.log(`‚ùå ID ${mention.id} —É–¥–∞–ª—ë–Ω`);
        } else {
            message.reply(`‚ÑπÔ∏è –£ <@${mention.id}> –Ω–µ –±—ã–ª–æ –¥–æ—Å—Ç—É–ø–∞`);
        }
    }
});

// üåê –ñ–∏–≤–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è UptimeRobot
app.get("/", (req, res) => {
    res.send("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç");
});

// üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`üåê API —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

// ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
client.login(BOT_TOKEN);
